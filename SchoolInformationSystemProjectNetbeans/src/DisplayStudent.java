
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp2020
 */
public class DisplayStudent extends javax.swing.JFrame {

    /**
     * Creates new form DisplayStudent
     */
    DBHelper dbh = new DBHelper();
    public DisplayStudent() {
        initComponents();
        try {
            dbh.connectDB();
            
            //Display All Records
            int x = 0;
            while(x < 12){
                tableStudent.getColumnModel().getColumn(x++).setPreferredWidth(100);
            }
            tableStudent.getColumnModel().getColumn(4).setPreferredWidth(150);
            tableStudent.getColumnModel().getColumn(6).setPreferredWidth(200);
            tableStudent.setShowGrid(true);
            ResultSet rs = dbh.displayStudent();
            while(tableStudent.getRowCount() > 0){
                ((DefaultTableModel) tableStudent.getModel()).removeRow(0);
                
            }
            int columns = rs.getMetaData().getColumnCount();
            while(rs.next()){
                Object[] row = new Object[columns];
                for(int i = 1;i<=columns;i++){
                    row[i-1] = rs.getObject(i);
                }
                ((DefaultTableModel) tableStudent.getModel()).insertRow(rs.getRow()-1, row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DisplayStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mainLink = new javax.swing.JButton();
        searchItem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStudent = new javax.swing.JTable();
        displayButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));
        jPanel1.setMaximumSize(new java.awt.Dimension(624, 413));
        jPanel1.setMinimumSize(new java.awt.Dimension(624, 413));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 51));
        jLabel2.setText("Student Information");

        mainLink.setBackground(new java.awt.Color(255, 255, 51));
        mainLink.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        mainLink.setForeground(new java.awt.Color(153, 0, 0));
        mainLink.setText("BACK TO MAIN");
        mainLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainLinkActionPerformed(evt);
            }
        });

        searchItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchItemActionPerformed(evt);
            }
        });
        searchItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchItemKeyTyped(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 51));
        jLabel1.setText("Enter Last Name to Search:");

        searchButton.setBackground(new java.awt.Color(255, 255, 51));
        searchButton.setForeground(new java.awt.Color(153, 0, 0));
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        tableStudent.setBackground(new java.awt.Color(255, 255, 51));
        tableStudent.setForeground(new java.awt.Color(153, 0, 0));
        tableStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Number", "First Name", "Middle Name", "Last Name", "Birthdate(yyyy-mm-dd)", "Gender", "Email", "Street", "Barangay", "City", "Province", "Contact Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableStudent.setAlignmentX(100.0F);
        tableStudent.setAlignmentY(100.0F);
        tableStudent.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableStudent.setMinimumSize(new java.awt.Dimension(200, 200));
        tableStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableStudent);

        displayButton.setBackground(new java.awt.Color(255, 255, 51));
        displayButton.setForeground(new java.awt.Color(153, 0, 0));
        displayButton.setText("Display All");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(searchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(searchButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(displayButton)
                    .addComponent(mainLink))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainLink, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(displayButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainLinkActionPerformed
        // TODO add your handling code here:
        TeacherMainPage l = new TeacherMainPage();
        l.setVisible(true);
        l.pack();
        l.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_mainLinkActionPerformed

    private void searchItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchItemActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchItemActionPerformed

    private void searchItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchItemKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_searchItemKeyTyped

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        try {
            //Display Records using Filter(LastName)
            String lname = searchItem.getText();
            ResultSet rs = dbh.displayStudent(lname);
            while(tableStudent.getRowCount() > 0){
                ((DefaultTableModel) tableStudent.getModel()).removeRow(0);

            }
            int columns = rs.getMetaData().getColumnCount();
            while(rs.next()){
                Object[] row = new Object[columns];
                for(int i = 1;i<=columns;i++){
                    row[i-1] = rs.getObject(i);
                }
                ((DefaultTableModel) tableStudent.getModel()).insertRow(rs.getRow()-1, row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DisplayStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        // TODO add your handling code here:
        try {
            //Display All Records
            int x = 0;
            while(x < 12){
                tableStudent.getColumnModel().getColumn(x++).setPreferredWidth(100);
            }
            tableStudent.getColumnModel().getColumn(6).setPreferredWidth(200);
            ResultSet rs = dbh.displayStudent();
            while(tableStudent.getRowCount() > 0){
                ((DefaultTableModel) tableStudent.getModel()).removeRow(0);
                
            }
            int columns = rs.getMetaData().getColumnCount();
            while(rs.next()){
                Object[] row = new Object[columns];
                for(int i = 1;i<=columns;i++){
                    row[i-1] = rs.getObject(i);
                }
                ((DefaultTableModel) tableStudent.getModel()).insertRow(rs.getRow()-1, row);
            }
            searchItem.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(DisplayStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_displayButtonActionPerformed

    private void tableStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStudentMouseClicked
        // TODO add your handling code here:
        int rowIndex = tableStudent.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableStudent.getModel();
        UpdateStudent l = new UpdateStudent();
        l.textIdno.setText(model.getValueAt(rowIndex, 0).toString());
        l.textFname.setText(model.getValueAt(rowIndex, 1).toString());
        l.textMname.setText(model.getValueAt(rowIndex, 2).toString());
        l.textLname.setText(model.getValueAt(rowIndex, 3).toString());
        l.textEmail.setText(model.getValueAt(rowIndex, 6).toString());
        l.textStreet.setText(model.getValueAt(rowIndex, 7).toString());
        l.textBarangay.setText(model.getValueAt(rowIndex, 8).toString());
        l.textCity.setText(model.getValueAt(rowIndex, 9).toString());
        l.textProvince.setText(model.getValueAt(rowIndex, 10).toString());
        l.textContactno.setText(model.getValueAt(rowIndex, 11).toString());
        if(model.getValueAt(rowIndex, 5).toString().equals("Male")){
            l.buttonMale.setSelected(true);
            l.buttonFemale.setSelected(false);
        }
        else{
            l.buttonMale.setSelected(false);
            l.buttonFemale.setSelected(true);
        }
        Date bdate;
        try {
            bdate = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rowIndex, 4).toString());
            l.birthdate.setDate(bdate);
        } catch (ParseException ex) {
            Logger.getLogger(DisplayStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
        l.setVisible(true);
        l.pack();
        l.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_tableStudentMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton displayButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mainLink;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchItem;
    public static javax.swing.JTable tableStudent;
    // End of variables declaration//GEN-END:variables
}
